#include <iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* left;
    Node* right;
    
    Node(int data){
        this->data = data;
        left = right = NULL;
    }
};

//Preorder Traversal 
void preordertraversal(Node* node ){
    if(node == NULL) return;
    
    cout<<node->data<<" ->";
    preordertraversal(node -> left);
    preordertraversal(node -> right);
}

//Postorder Traversal 
void postordertraversal(Node* node){
    if(node == NULL) return;
    postordertraversal(node ->left);
    postordertraversal(node ->right);
    cout<<node->data <<"->";
}

//inorder traversal 
void inordertraversal(Node* node){
    if(node == NULL) return;
    inordertraversal(node->left);
    cout<<node->data<<"->";
    inordertraversal(node->right);
}

int main() {
  Node* root = new Node(1);
  root->left = new Node(12);
  root->right = new Node(11);
  root->left->left = new Node(3);
  root->left->right = new Node(6);
  
  cout<<"Pre order traversal ";
  preordertraversal(root);
  cout<<endl;
  
  cout<<"Post order Traversal ";
  postordertraversal(root);
  cout<<endl;
  
  cout<<"In order traversal";
  inordertraversal(root);
  cout<<endl;
  
  //after using we will free the memory namespace
  free(root->left->left);
  free(root->left->right);
  free(root->left);
  free(root->right);
  free(root);

  return 0;
}
