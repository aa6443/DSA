class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {
        int s = 1;
        int e = arr.size() - 2;
        int m = s + (e-s)/2;
        while(s<=e){
            //check if the mid element itself is peak element 
            if(arr[m-1]< arr[m]  && arr[m]>arr[m+1]){
                return m;
            }
            //if it is increasing slope we are at left side of slope try to go to the the right side  
            else if(arr[m-1]<arr[m]  && arr[m]<arr[m+1]){
                s = m + 1;
            }
            //if it is decreasing slope we are at the right side of the slope go to the left side 
            else if(arr[m-1]> arr[m ]  && arr[m]>arr[m+1]){
                e = m -1;
            }
            m = s + (e-s)/2;
        }
        return 0;
    }
};
